/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        m_esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        m_grave {
            bindings = <&kp GRAVE>;
            key-positions = <25 26>;
        };

        m_sqt {
            bindings = <&kp SQT>;
            key-positions = <21 22>;
        };
    };

    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 12 24 1 13 25 2 14 26 3 15 27 4 16 28 36 37 38 17 5 29 39 40 41>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <36 37 38 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 41 39>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&trans     &kp Q              &kp W                &kp E            &kp R      &kp T              &kp Y    &kp U            &kp I            &kp O                &kp P                 &kp BSPC
&kp TAB    &HML LEFT_SHIFT A  &HML LEFT_CONTROL S  &HML LEFT_ALT D  &kp F      &kp G              &kp H    &kp J            &HMR K LEFT_ALT  &HMR L LEFT_CONTROL  &HMR SEMI LEFT_SHIFT  &kp SQT
&kp GRAVE  &kp Z              &kp X                &kp C            &kp V      &kp B              &kp N    &kp M            &kp COMMA        &kp DOT              &kp FSLH              &kp ESC
                                                   &kp LEFT_ALT     &lt 1 TAB  &HML LGUI SPACE    &kp RET  &lt 2 BACKSPACE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp ESC     &mt EXCL NUMBER_1  &mt AT NUMBER_2  &mt HASH NUMBER_3  &mt DOLLAR NUMBER_4  &mt PERCENT N5    &mt CARET NUMBER_6  &mt AMPS N7  &mt ASTRK N8  &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp BSPC
&bt BT_CLR  &bt BT_CLR_ALL     &bt BT_SEL 0     &bt BT_SEL 1       &bt BT_SEL 2         &bt BT_SEL 3      &kp LEFT            &kp DOWN     &kp UP        &kp RIGHT                &trans                    &trans
&trans      &bt BT_CLR         &trans           &kp LC(C)          &kp LC(V)            &trans            &trans              &trans       &trans        &trans                   &trans                    &trans
                                                &trans             &trans               &trans            &trans              &kp DEL      &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp ESC    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp EQUAL  &kp MINUS  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &none      &none      &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &trans    &trans       &trans     &trans     &trans
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
